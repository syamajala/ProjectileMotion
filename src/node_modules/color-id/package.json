{
  "_args": [
    [
      {
        "raw": "color-id@^1.1.0",
        "scope": null,
        "escapedName": "color-id",
        "name": "color-id",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/home/seshu/dev/ProjectileMotion/src/node_modules/gl-scatter2d-sdf"
    ]
  ],
  "_from": "color-id@>=1.1.0 <2.0.0",
  "_id": "color-id@1.1.0",
  "_inCache": true,
  "_location": "/color-id",
  "_nodeVersion": "6.2.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/color-id-1.1.0.tgz_1496698561937_0.42981479968875647"
  },
  "_npmUser": {
    "name": "dfcreative",
    "email": "df.creative@gmail.com"
  },
  "_npmVersion": "5.0.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "color-id@^1.1.0",
    "scope": null,
    "escapedName": "color-id",
    "name": "color-id",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gl-scatter2d-sdf"
  ],
  "_resolved": "https://registry.npmjs.org/color-id/-/color-id-1.1.0.tgz",
  "_shasum": "5e9159b99a73ac98f74820cb98a15fde3d7e034c",
  "_shrinkwrap": null,
  "_spec": "color-id@^1.1.0",
  "_where": "/home/seshu/dev/ProjectileMotion/src/node_modules/gl-scatter2d-sdf",
  "author": {
    "name": "Dima Yv",
    "email": "dfcreative@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/colorjs/color-id/issues"
  },
  "dependencies": {
    "clamp": "^1.0.1"
  },
  "description": "Get integer id for a color",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-2iRtAn6dC/6/G7bBIo0uupVrIne1NsQJvJxZOBCzQOfk7jRq97feaDZ3RdzuHakRXXnHGNwglto3pqtRx1sX0g==",
    "shasum": "5e9159b99a73ac98f74820cb98a15fde3d7e034c",
    "tarball": "https://registry.npmjs.org/color-id/-/color-id-1.1.0.tgz"
  },
  "gitHead": "f9b11dde281e250bad85d8bd26a7a722551f240d",
  "homepage": "https://github.com/colorjs/color-id#readme",
  "keywords": [
    "color",
    "colorjs"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dfcreative",
      "email": "df.creative@gmail.com"
    }
  ],
  "name": "color-id",
  "optionalDependencies": {},
  "readme": "# color-id [![unstable](https://img.shields.io/badge/stability-unstable-green.svg)](http://github.com/badges/stability-badges) [![Build Status](https://img.shields.io/travis/colorjs/color-id.svg)](https://travis-ci.org/colorjs/color-id)\r\n\r\nConvert color channels to single integer and back. Useful to get an id for a color.\r\n\r\n[![npm install color-id](https://nodei.co/npm/color-id.png?mini=true)](https://npmjs.org/package/color-id/)\r\n\r\n```js\r\nconst colorId = require('color-id');\r\n\r\ncolorId([.1, .5, .5, .1]); // 0x197f7f19\r\n```\r\n\r\n## `colorId(channels, normalized=true)`\r\n\r\nGet id for normalized to 0..1 rgb[a] channel values. Optionally pass normalized flag to indicate that values are normalized to 0..1 range, defaults to `true`.\r\n\r\n## `colorId.from(number, normalized=true)`\r\n\r\nGet color channels values from the color id. Optionally pass normalized flag to align values to `0..1` range.\r\n\r\n## Related\r\n\r\n> [color-interpolate](https://github.com/dfcreative/color-interpolate) — interpolate color over palette, colormap or gradient.<br/>\r\n> [color-rgba](https://github.com/dfcreative/color-rgba) — convert color string to rgba array.<br/>\r\n> [color-alpha](https://github.com/dfcreative/color-alpha) — change alpha channel for a color.\r\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/colorjs/color-id.git"
  },
  "scripts": {
    "test": "node test"
  },
  "version": "1.1.0"
}
