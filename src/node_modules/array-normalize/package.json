{
  "_args": [
    [
      {
        "raw": "array-normalize@^1.1.2",
        "scope": null,
        "escapedName": "array-normalize",
        "name": "array-normalize",
        "rawSpec": "^1.1.2",
        "spec": ">=1.1.2 <2.0.0",
        "type": "range"
      },
      "/home/seshu/dev/ProjectileMotion/src/node_modules/gl-scatter2d"
    ]
  ],
  "_from": "array-normalize@>=1.1.2 <2.0.0",
  "_id": "array-normalize@1.1.2",
  "_inCache": true,
  "_location": "/array-normalize",
  "_nodeVersion": "6.2.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/array-normalize-1.1.2.tgz_1496276996850_0.7435079428832978"
  },
  "_npmUser": {
    "name": "dfcreative",
    "email": "df.creative@gmail.com"
  },
  "_npmVersion": "3.7.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "array-normalize@^1.1.2",
    "scope": null,
    "escapedName": "array-normalize",
    "name": "array-normalize",
    "rawSpec": "^1.1.2",
    "spec": ">=1.1.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gl-scatter2d"
  ],
  "_resolved": "https://registry.npmjs.org/array-normalize/-/array-normalize-1.1.2.tgz",
  "_shasum": "85e0902502c00004e44f4732f017d37eb114cf68",
  "_shrinkwrap": null,
  "_spec": "array-normalize@^1.1.2",
  "_where": "/home/seshu/dev/ProjectileMotion/src/node_modules/gl-scatter2d",
  "author": {
    "name": "Dima Yv",
    "email": "dfcreative@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/dfcreative/array-normalize/issues"
  },
  "dependencies": {
    "array-bounds": "^1.0.0"
  },
  "description": "Normalize array (possibly n-dimensional) to zero mean and unit variance",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "85e0902502c00004e44f4732f017d37eb114cf68",
    "tarball": "https://registry.npmjs.org/array-normalize/-/array-normalize-1.1.2.tgz"
  },
  "gitHead": "8f6721eb47ebda4cb15c15ad1fb17a3af82a1e74",
  "homepage": "https://github.com/dfcreative/array-normalize#readme",
  "keywords": [
    "array",
    "normalize",
    "normal",
    "statistics",
    "samples"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dfcreative",
      "email": "df.creative@gmail.com"
    }
  ],
  "name": "array-normalize",
  "optionalDependencies": {},
  "readme": "# array-normalize  [![experimental](https://img.shields.io/badge/stability-unstable-yellow.svg)](http://github.com/badges/stability-badges) [![Build Status](https://img.shields.io/travis/dfcreative/array-normalize.svg)](https://travis-ci.org/dfcreative/array-normalize)\r\n\r\nNormalize array to unit length, that is 0..1 range. See [feature scaling](https://en.wikipedia.org/wiki/Feature_scaling).\r\n\r\n[![npm install array-normalize](https://nodei.co/npm/array-normalize.png?mini=true)](https://npmjs.org/package/array-normalize/)\r\n\r\n```js\r\nconst normalize = require('array-normalize')\r\n\r\nnormalize([0, 50, 100]) // [0, .5, 1]\r\n```\r\n\r\n## API\r\n\r\n### array = normalize(array, n=1, bounds?)\r\n\r\nNormalizes n-dimensional array in-place using dimensions `n` as stride, ie. for 1d array the expected data layout is `[x, x, x, ...]` for 2d is `[x, y, x, y, ...]`, etc. Every dimension is normalized independently, so 2d array is normalized to unit square `[0, 0, 1, 1]`. Optionally pass `bounds` box if you know min/max values to optimize calculations.\r\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dfcreative/array-normalize.git"
  },
  "scripts": {
    "test": "node test"
  },
  "version": "1.1.2"
}
